{"version":3,"file":"static/js/6.a26b15ad.chunk.js","mappings":"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","sources":["components/ButtonInForm/ButtonInForm.styled.tsx","constants/iconSize.tsx","utils/Spiner/Spiner.tsx","components/ButtonInForm/ButtonInForm.tsx","components/Form/Form.styled.tsx","components/Form/Form.tsx","components/ContactForm/ContactForm.tsx","components/Filter/Filter.styled.tsx","components/Filter/Filter.tsx","components/ContactList/ContactList.styled.tsx","components/ContactList/ConactList.tsx","utils/Skeleton/skeleton.tsx","utils/UseModal/useModal.tsx","components/Modal/EditContactModal.styled.tsx","components/Modal/EditContactModal.tsx","views/ContactPage.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ButtonAddContact = styled.button`\n  position: absolute;\n  top: 47%;\n  right: 7%;\n`;\n","export const iconSize = Object.freeze({\n  sn: 16,\n  md: 26,\n  lg: 36,\n});\n","import React from 'react';\nimport { SpinnerCircular } from 'spinners-react';\n\nexport const Spiner = () => (\n  <SpinnerCircular\n    size={26}\n    thickness={150}\n    speed={200}\n    color=\"#36ad47\"\n    secondaryColor=\"rgba(0, 0, 0, 0.44)\"\n  />\n);\n","import { ButtonAddContact } from './ButtonInForm.styled';\nimport { AiFillFileAdd } from 'react-icons/ai';\nimport { iconSize } from 'constants/iconSize';\nimport { Spiner } from 'utils/Spiner';\nimport React from 'react';\n\ninterface ButtonInFormProps {\n  isAddItems: boolean;\n}\n\nexport default function ButtonInForm({ isAddItems }: ButtonInFormProps) {\n  return (\n    <ButtonAddContact type=\"submit\" disabled={isAddItems}>\n      {isAddItems ? <Spiner /> : <AiFillFileAdd size={iconSize.md} />}\n    </ButtonAddContact>\n  );\n}\n","import { Form, Field } from 'formik';\nimport styled from '@emotion/styled';\n\nexport const MainForm = styled(Form)`\n  position: relative;\n  max-width: 300px;\n  padding: 20px;\n  border: ${props => `1px solid ${props.theme.colors.black}`};\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 18px;\n`;\nexport const ErrorText = styled.p`\n  color: red;\n`;\n\nexport const InputName = styled(Field)`\n  margin-bottom: 10px;\n`;\nexport const InputNumber = styled(Field)``;\n","import { Formik, ErrorMessage, FormikHelpers } from 'formik';\nimport React from 'react';\nimport { FormErrorProps, FormProps, Values } from 'types/componentTypes';\n\nimport * as yup from 'yup';\nimport {\n  MainForm,\n  Label,\n  InputName,\n  InputNumber,\n  ErrorText,\n} from './Form.styled';\n\nconst Form: React.FC<FormProps> = ({\n  onSubmit,\n  children,\n  toggleModal,\n  initialValues,\n}) => {\n  const defaultInitialValues = {\n    name: '',\n    number: '',\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required(),\n    number: yup.number().min(8).positive().required(),\n  });\n\n  const handleSubmit = (values: Values, helpers: FormikHelpers<Values>) => {\n    onSubmit(values);\n    helpers.resetForm();\n    toggleModal?.();\n  };\n\n  const FormError = ({ name }: FormErrorProps) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues ?? defaultInitialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <MainForm autoComplete=\"off\">\n        <Label htmlFor=\"name\">Name</Label>\n        <InputName name=\"name\" type=\"text\" placeholder=\"Enter name\" />\n        <FormError name=\"name\" />\n        <Label htmlFor=\"number\">Number</Label>\n        <InputNumber\n          name=\"number\"\n          type=\"tel\"\n          placeholder=\"Enter phone number\"\n        />\n        <FormError name=\"number\" />\n        {children}\n      </MainForm>\n    </Formik>\n  );\n};\n\nexport default Form;\n","import ButtonInForm from 'components/ButtonInForm';\nimport Form from 'components/Form';\nimport React from 'react';\nimport { ContactFormProps } from 'types/componentTypes';\n\nexport default function ContactForm({\n  onSubmit,\n  isAddItems,\n}: ContactFormProps) {\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <ButtonInForm isAddItems={isAddItems} />\n      </Form>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  width: 200px;\n  font-size: 18px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputFilter = styled.input`\n  margin-top: 5px;\n`;\n","import { Label, InputFilter } from './Filter.styled';\nimport React from 'react';\nimport { FilterProps } from 'types/componentTypes';\n\nconst Filter: React.FC<FilterProps> = ({ value, onChange }) => (\n  <Label>\n    Find contacts by name\n    <InputFilter type=\"text\" value={value} onChange={onChange} />\n  </Label>\n);\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const ItemList = styled.li`\n  display: flex;\n  align-items: baseline;\n  &::before {\n    content: '';\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background-color: ${({ theme }) => theme.colors.black};\n    margin-right: 15px;\n    margin-left: 15px;\n  }\n`;\nexport const ListOfContacts = styled.ul`\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n  margin-top: 20px;\n`;\nexport const ContactDetails = styled.p`\n  flex-grow: 1;\n`;\n\nexport const EditButton = styled.button`\n  /* margin-left: 10px; */\n`;\n","import {\n  ItemList,\n  ListOfContacts,\n  ContactDetails,\n  EditButton,\n} from './ContactList.styled';\nimport { useDeleteContactsMutation } from 'redux/contactsAPI';\nimport { IoIosTrash } from 'react-icons/io';\nimport { AiFillEdit } from 'react-icons/ai';\nimport { iconSize } from 'constants/iconSize';\nimport { Spiner } from 'utils/Spiner';\nimport React from 'react';\nimport { ContactListProps } from 'types/componentTypes';\n\nconst ContactList: React.FC<ContactListProps> = ({\n  contacts,\n  onEdit,\n  getContactId,\n}) => {\n  const [deleteContacts, { isLoading: isDeleting }] =\n    useDeleteContactsMutation();\n\n  return (\n    <>\n      {contacts.length > 0 ? (\n        <ListOfContacts>\n          {contacts.map(({ id, name, number }) => (\n            <ItemList key={id}>\n              <ContactDetails>\n                {name}: {number}\n              </ContactDetails>\n              <button\n                type=\"button\"\n                disabled={isDeleting}\n                onClick={() => deleteContacts(id)}\n              >\n                {isDeleting ? <Spiner /> : <IoIosTrash size={iconSize.md} />}\n              </button>\n              <EditButton\n                type=\"button\"\n                onClick={() => {\n                  onEdit();\n                  getContactId(id);\n                }}\n              >\n                <AiFillEdit size={iconSize.md} />\n              </EditButton>\n            </ItemList>\n          ))}\n        </ListOfContacts>\n      ) : (\n        <p>Contact list is empty</p>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const GlobalLoader = () => {\n  return (\n    <ContentLoader\n      speed={2}\n      width={400}\n      height={160}\n      viewBox=\"0 0 350 160\"\n      backgroundColor=\"#d9d9d9\"\n      foregroundColor=\"#ededed\"\n    >\n      <circle cx=\"10\" cy=\"20\" r=\"8\" />\n      <circle cx=\"10\" cy=\"50\" r=\"8\" />\n      <rect x=\"25\" y=\"45\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n      <circle cx=\"10\" cy=\"80\" r=\"8\" />\n      <rect x=\"25\" y=\"75\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n      <circle cx=\"10\" cy=\"110\" r=\"8\" />\n      <rect x=\"25\" y=\"105\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n      <rect x=\"24\" y=\"15\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n      <rect x=\"268\" y=\"16\" rx=\"0\" ry=\"0\" width=\"14\" height=\"9\" />\n      <rect x=\"295\" y=\"75\" rx=\"0\" ry=\"0\" width=\"14\" height=\"9\" />\n      <rect x=\"269\" y=\"75\" rx=\"0\" ry=\"0\" width=\"14\" height=\"9\" />\n      <rect x=\"296\" y=\"105\" rx=\"0\" ry=\"0\" width=\"14\" height=\"9\" />\n      <rect x=\"269\" y=\"105\" rx=\"0\" ry=\"0\" width=\"14\" height=\"9\" />\n      <rect x=\"292\" y=\"16\" rx=\"0\" ry=\"0\" width=\"14\" height=\"9\" />\n      <rect x=\"293\" y=\"46\" rx=\"0\" ry=\"0\" width=\"14\" height=\"9\" />\n      <rect x=\"268\" y=\"46\" rx=\"0\" ry=\"0\" width=\"14\" height=\"9\" />\n    </ContentLoader>\n  );\n};\n","import { useState } from 'react';\n\nconst useModal = () => {\n  const [isShowing, setIsShowing] = useState(false);\n\n  function toggle() {\n    setIsShowing(!isShowing);\n  }\n\n  return {\n    isShowing,\n    toggle,\n  };\n};\n\nexport default useModal;\n","import styled from '@emotion/styled';\nimport { Button } from 'react-bootstrap';\n\nexport const ButtonModal = styled(Button)`\n  margin-top: 20px;\n`;\n","import { Modal } from 'react-bootstrap';\nimport { ButtonModal } from './EditContactModal.styled';\nimport Form from 'components/Form';\nimport React from 'react';\nimport { EditContactModalProps } from 'types/componentTypes';\n\nconst EditContactModal: React.FC<EditContactModalProps> = ({\n  hide,\n  onSubmit,\n}) => {\n  return (\n    <>\n      <Modal show onHide={hide} size=\"sm\" backdrop=\"static\" keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit contact</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={onSubmit} toggleModal={hide}>\n            <ButtonModal variant=\"secondary\" onClick={hide}>\n              Close\n            </ButtonModal>\n            <ButtonModal variant=\"primary\" type=\"submit\">\n              Edit\n            </ButtonModal>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\nexport default EditContactModal;\n","import toast, { Toaster } from 'react-hot-toast';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport {\n  useFetchContactsQuery,\n  useCreacteContactMutation,\n  useUpdateContactMutation,\n} from '../redux/contactsAPI';\n\nimport { useState } from 'react';\nimport { GlobalLoader } from 'utils/Skeleton';\nimport UseModal from 'utils/UseModal';\nimport EditContactModal from 'components/Modal/EditContactModal';\nimport React from 'react';\nimport { Values } from 'types/componentTypes';\n\nexport default function App() {\n  const [filteredItems, setFilteredItems] = useState('');\n  const [contactId, setConatctId] = useState('');\n  const { isShowing, toggle } = UseModal();\n  const { data } = useFetchContactsQuery(null);\n  const [creacteContact, { isLoading }] = useCreacteContactMutation();\n  const [updateContacts] = useUpdateContactMutation();\n\n  const addNewContact = ({ name, number }: Values) => {\n    const newContact = {\n      name,\n      number,\n    };\n    if (\n      data.some(\n        (contact: { name: string }) =>\n          contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return toast.error(`${name} is already in contacts!`);\n    }\n\n    return creacteContact(newContact);\n  };\n\n  const changeFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFilteredItems(e.target.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filteredItems.toLowerCase();\n    return data.filter((el: { name: string }) =>\n      el.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const getContactId = (id: React.SetStateAction<string>) => {\n    setConatctId(id);\n  };\n\n  const updateContact = (contact: Values) => {\n    const newUpdateContact = { contactId, ...contact };\n    updateContacts(newUpdateContact);\n  };\n\n  return (\n    <div>\n      {isShowing && <EditContactModal hide={toggle} onSubmit={updateContact} />}\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addNewContact} isAddItems={isLoading} />\n      <Toaster />\n      <h2>Contacts</h2>\n      <Filter value={filteredItems} onChange={() => changeFilter} />\n      {data ? (\n        <ContactList\n          contacts={getVisibleContacts()}\n          onEdit={toggle}\n          getContactId={getContactId}\n        />\n      ) : (\n        <GlobalLoader />\n      )}\n    </div>\n  );\n}\n"],"names":["ButtonAddContact","styled","iconSize","Object","freeze","sn","md","lg","Spiner","SpinnerCircular","size","thickness","speed","color","secondaryColor","ButtonInForm","isAddItems","type","disabled","MainForm","Form","props","theme","colors","black","Label","ErrorText","InputName","Field","InputNumber","onSubmit","children","toggleModal","initialValues","schema","yup","shape","name","required","number","min","positive","FormError","render","message","values","helpers","resetForm","validationSchema","autoComplete","htmlFor","placeholder","ContactForm","InputFilter","value","onChange","ItemList","ListOfContacts","ContactDetails","EditButton","contacts","onEdit","getContactId","useDeleteContactsMutation","deleteContacts","isDeleting","isLoading","length","map","id","onClick","GlobalLoader","width","height","viewBox","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","useState","isShowing","setIsShowing","toggle","ButtonModal","Button","hide","Modal","show","onHide","backdrop","keyboard","closeButton","variant","App","filteredItems","setFilteredItems","contactId","setConatctId","UseModal","data","useFetchContactsQuery","useCreacteContactMutation","creacteContact","useUpdateContactMutation","updateContacts","changeFilter","e","target","contact","newUpdateContact","newContact","some","toLowerCase","toast","normalizedFilter","filter","el","includes","getVisibleContacts"],"sourceRoot":""}